/*
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Read local.properties
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.google.gms.google-services'

android {
    namespace "com.google.ar.core.examples.kotlin.helloar"
    compileSdkVersion 35
    defaultConfig {
        applicationId "com.google.ar.core.examples.kotlin.helloar"

        // AR Optional apps must declare minSdkVersion >= 14.
        // AR Required apps must declare minSdkVersion >= 24.
        minSdkVersion 24
        targetSdkVersion 35
        versionCode 1
        versionName '1.0'
        resourceConfigurations += ['en']

        // Set this to the languages you actually use, otherwise you'll include resource strings
        // for all languages supported by the Navigation SDK.
        multiDexEnabled true

        // Enable RenderScript (required for YUV â†’ RGB conversion)
        renderscriptTargetApi 21
        renderscriptSupportModeEnabled true  // Backward compatibility

        // This line is the "bridge". It makes the key available to the manifest.
        manifestPlaceholders = [
                MAPS_API_KEY: localProperties.getProperty('MAPS_API_KEY'),
                 MICRO_GUIDANCE_API: localProperties.getProperty('MICRO_GUIDANCE_API'),
                // GEMINI_API_KEY: localProperties.getProperty('GEMINI_API_KEY')
        ]
        // buildConfigField "String", "GEMINI_API_KEY", "\"${localProperties.getProperty("GEMINI_API_KEY")}\""
        buildConfigField "String", "MAPS_API_KEY", "\"${localProperties.getProperty("MAPS_API_KEY")}\""
         buildConfigField "String", "MICRO_GUIDANCE_API", "\"${localProperties.getProperty("MICRO_GUIDANCE_API")}\""
    }
    dexOptions {
        // This increases the amount of memory available to the dexer. This is required to build
        // apps using the Navigation SDK.
        javaMaxHeapSize "4g"
    }
    compileOptions {
        // Flag to enable support for the new language APIs
//        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        buildConfig=true
    }
    packagingOptions {
        resources {
            excludes += "META-INF/versions/9/OSGI-INF/MANIFEST.MF"
        }
    }
}
repositories {
    // Navigation SDK for Android and other libraries are hosted on Google's Maven repository.
    google()
}

dependencies {
    // ARCore (Google Play Services for AR) library.
    implementation 'com.google.ar:core:1.48.0'

    // Obj - a simple Wavefront OBJ file loader
    // https://github.com/javagl/Obj
    implementation 'de.javagl:obj:0.4.0'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0'

    implementation 'com.google.android.material:material:1.1.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    
    implementation "com.squareup.okhttp3:okhttp:4.10.0" // Or your current version
    implementation 'com.google.code.gson:gson:2.8.9' // For JSON serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3"
    implementation libs.androidx.ui.text.android


    implementation libs.androidx.fragment
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    implementation 'com.google.android.gms:play-services-location:21.3.0'
    implementation libs.sceneform.ux

//    implementation 'com.github.jd-alexander:google-maps-directions:2.0.1'

    // *** ADD THIS FOR PLACES SEARCH ***
    implementation 'com.google.android.libraries.places:places:3.5.0'

    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.google.maps.android:android-maps-utils:2.3.0'

    implementation 'com.google.android.libraries.navigation:navigation:5.2.0'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1"

    // Import the BoM for the Firebase platform
    implementation(platform("com.google.firebase:firebase-bom:34.2.0"))

    // Add the dependency for the Firebase AI Logic library When using the BoM,
    // you don't specify versions in Firebase library dependencies
    implementation("com.google.firebase:firebase-ai")
    implementation libs.identity.jvm

//    // Jetpack Compose dependencies
//    implementation("androidx.compose.ui:ui:1.5.4")
//    implementation("androidx.compose.material3:material3:1.1.2")
//    implementation("androidx.compose.ui:ui-tooling-preview:1.5.4")
//    debugImplementation("androidx.compose.ui:ui-tooling:1.5.4")
//    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2")
//    implementation("androidx.activity:activity-compose:1.8.1")



}
